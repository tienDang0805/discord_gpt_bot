# .github/workflows/deploy.yml
name: Deploy Discord Bot

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # KH√îNG C·∫¶N C√ÄI ƒê·∫∂T NODE.JS TR√äN GITHUB ACTIONS RUNNER N·ªÆA
      # V√¨ c√°c l·ªánh npm/node/pm2 s·∫Ω ch·∫°y TR√äN SERVER c·ªßa b·∫°n, kh√¥ng ph·∫£i tr√™n m√°y ·∫£o GitHub Actions n√†y.
      # B·ªè qua b∆∞·ªõc 'Set up Node.js environment' v√† 'Install Node.js dependencies' tr√™n GitHub Actions runner.
      # L√Ω do: B·∫°n n√≥i ƒë√£ c√†i ƒë·∫∑t s·∫µn Node.js tr√™n server.

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # --- C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng Node.js (n·∫øu d√πng NVM) ---
            # ƒê√¢y l√† ph·∫ßn quan tr·ªçng ƒë·ªÉ kh·∫Øc ph·ª•c l·ªói 'command not found'
            # Gi·∫£ ƒë·ªãnh NVM ƒë∆∞·ª£c c√†i ƒë·∫∑t cho user c·ªßa b·∫°n trong ~/.nvm
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
            # ƒê·∫£m b·∫£o Node.js v√† npm ƒë√∫ng phi√™n b·∫£n v√† c√≥ trong PATH
            nvm use 20 # Thay '20' b·∫±ng phi√™n b·∫£n Node.js b·∫°n ƒë√£ c√†i tr√™n server (v√≠ d·ª• '18' ho·∫∑c '22')

            # --- C√°c l·ªánh tri·ªÉn khai ---
            # Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c d·ª± √°n bot tr√™n server
            cd ${{ secrets.PROJECT_PATH }}

            if [ -d ".git" ]; then
              echo "Repository Git ƒë√£ t·ªìn t·∫°i, ƒëang k√©o c√°c thay ƒë·ªïi m·ªõi nh·∫•t..."
              git pull origin main
            else
              echo "Kh√¥ng t√¨m th·∫•y Repository Git, ƒëang clone l·∫ßn ƒë·∫ßu..."
              git clone https://github.com/${{ github.repository }}.git .
            fi

            # C√†i ƒë·∫∑t l·∫°i c√°c g√≥i Node.js tr√™n server
            npm install --production

            # T·∫°o ho·∫∑c c·∫≠p nh·∫≠t file .env tr√™n server
            echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
            echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
            echo "GUILD_ID=${{ secrets.GUILD_ID }}" >> .env
            echo "APIKEY_WEATHER=${{ secrets.APIKEY_WEATHER }}" >> .env
            echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
            echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
            echo "DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}" >> .env

            # Kh·ªüi ƒë·ªông l·∫°i bot b·∫±ng PM2
            pm2 save
            pm2 reload racoon-8d-bot || pm2 start index.js --name "racoon-8d-bot"
            echo "Bot ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai v√† kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng!"

            # --- Th√™m logic g·ª≠i tin nh·∫Øn Discord ---
            # S·ª≠ d·ª•ng 'EOF' marker ƒë·ªÉ t·∫°o file Node.js, tr√°nh l·ªói c√∫ ph√°p
            cat << 'EOF' > send_deploy_notification.js
            const { Client, GatewayIntentBits } = require("discord.js");
            const dotenv = require("dotenv");
            dotenv.config();

            const token = process.env.DISCORD_TOKEN;
            const channelId = process.env.DISCORD_CHANNEL_ID;
            const guildId = process.env.GUILD_ID; // C·∫ßn thi·∫øt n·∫øu bot ph·∫£i join guild tr∆∞·ªõc

            if (!token || !channelId || !guildId) { // Th√™m guildId v√†o ƒëi·ªÅu ki·ªán ki·ªÉm tra
                console.error("Thi·∫øu m·ªôt trong c√°c bi·∫øn DISCORD_TOKEN, DISCORD_CHANNEL_ID, ho·∫∑c GUILD_ID trong .env");
                process.exit(1);
            }

            const client = new Client({
                intents: [
                    GatewayIntentBits.Guilds,
                    GatewayIntentBits.GuildMessages,
                    GatewayIntentBits.MessageContent
                ]
            });

            client.once("ready", async () => {
                console.log(`ƒêƒÉng nh·∫≠p v·ªõi vai tr√≤ ${client.user.tag}!`);
                try {
                    const guild = client.guilds.cache.get(guildId);
                    if (!guild) {
                        console.error(`Kh√¥ng t√¨m th·∫•y guild v·ªõi ID: ${guildId}. Bot c·∫ßn ·ªü trong guild n√†y.`);
                        return;
                    }
                    const channel = guild.channels.cache.get(channelId);
                    if (channel && channel.isTextBased()) {
                        const commitSha = process.env.GITHUB_SHA ? process.env.GITHUB_SHA.substring(0, 7) : "N/A";
                        const commitUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;
                        const repositoryUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}`;

                        await channel.send(
                            `üöÄ **Tri·ªÉn khai th√†nh c√¥ng!**\n` +
                            `**Bot:** ${client.user.tag}\n` +
                            `**Phi√™n b·∫£n:** ${process.env.GITHUB_REF_NAME || "main"}\n` +
                            `**Commit:** [${commitSha}](${commitUrl})\n` +
                            `**Repository:** ${repositoryUrl}\n` +
                            `Bot ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v√† kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng.`
                        );
                        console.log("ƒê√£ g·ª≠i tin nh·∫Øn th√¥ng b√°o tri·ªÉn khai th√†nh c√¥ng.");
                    } else {
                        console.error(`Kh√¥ng t√¨m th·∫•y k√™nh vƒÉn b·∫£n v·ªõi ID: ${channelId}. Ho·∫∑c k√™nh kh√¥ng ph·∫£i l√† k√™nh vƒÉn b·∫£n.`);
                    }
                } catch (error) {
                    console.error("L·ªói khi g·ª≠i tin nh·∫Øn Discord:", error);
                } finally {
                    client.destroy(); // ƒê·∫£m b·∫£o client ng·∫Øt k·∫øt n·ªëi sau khi g·ª≠i
                }
            });

            client.login(token);
            EOF

            # Ch·∫°y script g·ª≠i th√¥ng b√°o.
            sleep 5 # ƒê·ª£i 5 gi√¢y ƒë·ªÉ bot ch√≠nh ch·∫Øc ch·∫Øn kh·ªüi ƒë·ªông l·∫°i
            node ./send_deploy_notification.js

            # X√≥a script t·∫°m th·ªùi sau khi d√πng xong
            rm send_deploy_notification.js
    ```

---
