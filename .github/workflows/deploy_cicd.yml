# .github/workflows/deploy.yml
name: Deploy Discord Bot # T√™n c·ªßa lu·ªìng c√¥ng vi·ªác n√†y, s·∫Ω hi·ªÉn th·ªã trong tab 'Actions'

# K√≠ch ho·∫°t lu·ªìng c√¥ng vi·ªác n√†y m·ªói khi c√≥ code ƒë∆∞·ª£c ƒë·∫©y l√™n nh√°nh 'main'
on:
  push:
    branches:
      - main

# ƒê·ªãnh nghƒ©a m·ªôt c√¥ng vi·ªác (job) duy nh·∫•t c√≥ t√™n 'deploy'
jobs:
  deploy:
    # C√¥ng vi·ªác n√†y s·∫Ω ch·∫°y tr√™n m·ªôt m√°y ·∫£o Ubuntu m·ªõi tinh do GitHub cung c·∫•p
    runs-on: ubuntu-latest

    # C√°c b∆∞·ªõc (steps) ƒë·ªãnh nghƒ©a chu·ªói c√°c h√†nh ƒë·ªông c·∫ßn th·ª±c hi·ªán
    steps:
      - name: Checkout code # B∆∞·ªõc 1: T·∫£i m√£ ngu·ªìn t·ª´ kho ch·ª©a GitHub c·ªßa b·∫°n
        uses: actions/checkout@v4 # S·ª≠ d·ª•ng action c√≥ s·∫µn ƒë·ªÉ t·∫£i code

      - name: Set up Node.js environment # B∆∞·ªõc 2: C√†i ƒë·∫∑t Node.js tr√™n m√°y ·∫£o GitHub Actions
        uses: actions/setup-node@v4
        with:
          node-version: '22' # Ch·ªçn phi√™n b·∫£n Node.js (n√™n d√πng phi√™n b·∫£n LTS nh∆∞ 18 ho·∫∑c 20)

      - name: Install Node.js dependencies # B∆∞·ªõc 3: C√†i ƒë·∫∑t c√°c g√≥i npm c·∫ßn thi·∫øt cho bot c·ªßa b·∫°n
        run: npm install

      - name: Install system dependencies (FFmpeg, Opus) # B∆∞·ªõc 4: C√†i ƒë·∫∑t c√°c g√≥i Linux c·∫ßn thi·∫øt cho ch·ª©c nƒÉng tho·∫°i
        run: |
          sudo apt update
          sudo apt install -y ffmpeg libopus-dev

      - name: Deploy to Server via SSH # B∆∞·ªõc 5: K·∫øt n·ªëi ƒë·∫øn server c·ªßa b·∫°n v√† tri·ªÉn khai code
        uses: appleboy/ssh-action@v1.0.3 # S·ª≠ d·ª•ng action c√≥ s·∫µn ƒë·ªÉ k·∫øt n·ªëi SSH
        with:
          host: ${{ secrets.SERVER_HOST }} # L·∫•y ƒë·ªãa ch·ªâ host t·ª´ GitHub Secrets
          username: ${{ secrets.SERVER_USERNAME }} # L·∫•y t√™n ng∆∞·ªùi d√πng t·ª´ GitHub Secrets
          key: ${{ secrets.SSH_PRIVATE_KEY }} # L·∫•y private key SSH t·ª´ GitHub Secrets
          # Kh·ªëi 'script' ch·ª©a c√°c l·ªánh s·∫Ω ƒë∆∞·ª£c th·ª±c thi tr·ª±c ti·∫øp tr√™n server c·ªßa b·∫°n
          script: |
            # Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c d·ª± √°n bot tr√™n server
            cd ${{ secrets.PROJECT_PATH }}

            # Ki·ªÉm tra xem repository Git ƒë√£ ƒë∆∞·ª£c clone ch∆∞a (l·∫ßn tri·ªÉn khai ƒë·∫ßu ti√™n so v·ªõi c√°c l·∫ßn sau)
            if [ -d ".git" ]; then
              echo "Repository Git ƒë√£ t·ªìn t·∫°i, ƒëang k√©o c√°c thay ƒë·ªïi m·ªõi nh·∫•t..."
              git pull origin main # K√©o thay ƒë·ªïi n·∫øu kho m√£ ƒë√£ t·ªìn t·∫°i
            else
              echo "Kh√¥ng t√¨m th·∫•y Repository Git, ƒëang clone l·∫ßn ƒë·∫ßu..."
              # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng v√† t√™n repo t·ª´ bi·∫øn m√¥i tr∆∞·ªùng c·ªßa GitHub Actions
              git clone https://github.com/${{ github.repository }}.git . # Clone n·∫øu l√† l·∫ßn tri·ªÉn khai ƒë·∫ßu ti√™n
            fi

            # C√†i ƒë·∫∑t l·∫°i c√°c g√≥i Node.js tr√™n server (quan tr·ªçng sau khi k√©o code m·ªõi)
            # D√πng --production ƒë·ªÉ ch·ªâ c√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt cho m√¥i tr∆∞·ªùng ch·∫°y bot
            npm install --production

            # T·∫°o ho·∫∑c c·∫≠p nh·∫≠t file .env tr√™n server b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c GitHub Secrets
            echo "DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}" >> .env

            # Kh·ªüi ƒë·ªông l·∫°i bot b·∫±ng PM2
            # 'pm2 reload' s·∫Ω reload n·∫øu bot ƒëang ch·∫°y; '|| pm2 start' s·∫Ω ch·∫°y bot n·∫øu n√≥ ch∆∞a ch·∫°y
            pm2 save # L∆∞u tr·∫°ng th√°i c√°c ti·∫øn tr√¨nh PM2
            pm2 reload racoon-8d-bot || pm2 start index.js --name "racoon-8d-bot"
            echo "Bot ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai v√† kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng!"
            cat << 'EOF_NODE_SCRIPT' > send_deploy_notification.js
            const { Client, GatewayIntentBits } = require("discord.js");
            const dotenv = require("dotenv");
            dotenv.config();

            const token = process.env.DISCORD_TOKEN;
            const channelId = process.env.DISCORD_CHANNEL_ID;
            const guildId = process.env.GUILD_ID; // C·∫ßn thi·∫øt ƒë·ªÉ t√¨m k√™nh trong guild

            // Ki·ªÉm tra c√°c bi·∫øn m√¥i tr∆∞·ªùng c·∫ßn thi·∫øt
            if (!token || !channelId || !guildId) {
                console.error("L·ªói: Thi·∫øu m·ªôt trong c√°c bi·∫øn DISCORD_TOKEN, DISCORD_CHANNEL_ID, ho·∫∑c GUILD_ID trong .env.");
                process.exit(1);
            }

            const client = new Client({
                intents: [
                    GatewayIntentBits.Guilds, // B·∫Øt bu·ªôc ƒë·ªÉ truy c·∫≠p guild v√† k√™nh
                    GatewayIntentBits.GuildMessages,
                    GatewayIntentBits.MessageContent
                ]
            });

            client.once("ready", async () => {
                console.log(`ƒêƒÉng nh·∫≠p th√†nh c√¥ng v·ªõi vai tr√≤ ${client.user.tag}! Chu·∫©n b·ªã g·ª≠i th√¥ng b√°o...`);
                try {
                    const guild = client.guilds.cache.get(guildId);
                    if (!guild) {
                        console.error(`L·ªói: Kh√¥ng t√¨m th·∫•y Guild (m√°y ch·ªß Discord) v·ªõi ID: ${guildId}. ƒê·∫£m b·∫£o bot ƒë√£ ƒë∆∞·ª£c m·ªùi v√†o guild n√†y.`);
                        return;
                    }
                    const channel = guild.channels.cache.get(channelId);
                    if (channel && channel.isTextBased()) { // Ki·ªÉm tra xem k√™nh c√≥ ph·∫£i l√† k√™nh vƒÉn b·∫£n kh√¥ng
                        const commitSha = process.env.GITHUB_SHA ? process.env.GITHUB_SHA.substring(0, 7) : "N/A";
                        const commitUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;
                        const repositoryUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}`;

                        await channel.send(
                            `üöÄ **Tri·ªÉn khai th√†nh c√¥ng!**\n` +
                            `**Bot:** \`${client.user.tag}\`\n` +
                            `**Phi√™n b·∫£n:** \`${process.env.GITHUB_REF_NAME || "main"}\`\n` +
                            `**Commit:** [${commitSha}](${commitUrl})\n` +
                            `**Repository:** <${repositoryUrl}>\n` +
                            `Bot ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v√† kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng tr√™n server.`
                        );
                        console.log("ƒê√£ g·ª≠i tin nh·∫Øn th√¥ng b√°o tri·ªÉn khai th√†nh c√¥ng l√™n Discord.");
                    } else {
                        console.error(`L·ªói: Kh√¥ng t√¨m th·∫•y k√™nh vƒÉn b·∫£n v·ªõi ID: ${channelId}, ho·∫∑c k√™nh ƒë√≥ kh√¥ng ph·∫£i l√† k√™nh vƒÉn b·∫£n.`);
                    }
                } catch (error) {
                    console.error("L·ªói khi g·ª≠i tin nh·∫Øn Discord:", error.message || error);
                } finally {
                    client.destroy(); // ƒê·∫£m b·∫£o client ng·∫Øt k·∫øt n·ªëi sau khi ho√†n th√†nh
                    process.exit(0); // K·∫øt th√∫c ti·∫øn tr√¨nh Node.js
                }
            });

            client.on("error", (error) => {
                console.error("L·ªói client Discord:", error);
                process.exit(1); // Tho√°t v·ªõi l·ªói n·∫øu client g·∫∑p s·ª± c·ªë
            });

            client.login(token).catch(err => {
                console.error("L·ªói ƒëƒÉng nh·∫≠p Discord:", err.message || err);
                process.exit(1);
            });
            EOF_NODE_SCRIPT

            # Ch·∫°y script g·ª≠i th√¥ng b√°o.
            # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ bot ch√≠nh c√≥ th·ªùi gian kh·ªüi ƒë·ªông l·∫°i ho√†n to√†n.
            sleep 5
            node ./send_deploy_notification.js

            # X√≥a script t·∫°m th·ªùi sau khi d√πng xong
            rm send_deploy_notification.js
            
