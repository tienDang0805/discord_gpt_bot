# .github/workflows/deploy.yml
name: Deploy Discord Bot # T√™n c·ªßa lu·ªìng c√¥ng vi·ªác n√†y, s·∫Ω hi·ªÉn th·ªã trong tab 'Actions'

# K√≠ch ho·∫°t lu·ªìng c√¥ng vi·ªác n√†y m·ªói khi c√≥ code ƒë∆∞·ª£c ƒë·∫©y l√™n nh√°nh 'main'
on:
  push:
    branches:
      - main

# ƒê·ªãnh nghƒ©a m·ªôt c√¥ng vi·ªác (job) duy nh·∫•t c√≥ t√™n 'deploy'
jobs:
  deploy:
    # C√¥ng vi·ªác n√†y s·∫Ω ch·∫°y tr√™n m·ªôt m√°y ·∫£o Ubuntu m·ªõi tinh do GitHub cung c·∫•p
    runs-on: ubuntu-latest

    # C√°c b∆∞·ªõc (steps) ƒë·ªãnh nghƒ©a chu·ªói c√°c h√†nh ƒë·ªông c·∫ßn th·ª±c hi·ªán
    steps:
      - name: Checkout code # B∆∞·ªõc 1: T·∫£i m√£ ngu·ªìn t·ª´ kho ch·ª©a GitHub c·ªßa b·∫°n
        uses: actions/checkout@v4 # S·ª≠ d·ª•ng action c√≥ s·∫µn ƒë·ªÉ t·∫£i code

      - name: Set up Node.js environment # B∆∞·ªõc 2: C√†i ƒë·∫∑t Node.js tr√™n m√°y ·∫£o GitHub Actions
        uses: actions/setup-node@v4
        with:
          node-version: '22' # Ch·ªçn phi√™n b·∫£n Node.js (n√™n d√πng phi√™n b·∫£n LTS nh∆∞ 18 ho·∫∑c 20)

      - name: Install Node.js dependencies # B∆∞·ªõc 3: C√†i ƒë·∫∑t c√°c g√≥i npm c·∫ßn thi·∫øt cho bot c·ªßa b·∫°n
        run: npm install

      - name: Install system dependencies (FFmpeg, Opus) # B∆∞·ªõc 4: C√†i ƒë·∫∑t c√°c g√≥i Linux c·∫ßn thi·∫øt cho ch·ª©c nƒÉng tho·∫°i
        run: |
          sudo apt update
          sudo apt install -y ffmpeg libopus-dev

      - name: Deploy to Server via SSH # B∆∞·ªõc 5: K·∫øt n·ªëi ƒë·∫øn server c·ªßa b·∫°n v√† tri·ªÉn khai code
        uses: appleboy/ssh-action@v1.0.3 # S·ª≠ d·ª•ng action c√≥ s·∫µn ƒë·ªÉ k·∫øt n·ªëi SSH
        with:
          host: ${{ secrets.SERVER_HOST }} # L·∫•y ƒë·ªãa ch·ªâ host t·ª´ GitHub Secrets
          username: ${{ secrets.SERVER_USERNAME }} # L·∫•y t√™n ng∆∞·ªùi d√πng t·ª´ GitHub Secrets
          key: ${{ secrets.SSH_PRIVATE_KEY }} # L·∫•y private key SSH t·ª´ GitHub Secrets
          # Kh·ªëi 'script' ch·ª©a c√°c l·ªánh s·∫Ω ƒë∆∞·ª£c th·ª±c thi tr·ª±c ti·∫øp tr√™n server c·ªßa b·∫°n
          script: |
            set -e # Tho√°t ngay l·∫≠p t·ª©c n·∫øu b·∫•t k·ª≥ l·ªánh n√†o g·∫∑p l·ªói

            # 1. C√†i ƒë·∫∑t ho·∫∑c c·∫≠p nh·∫≠t NVM (Node Version Manager) tr√™n server
            if [ ! -d "$HOME/.nvm" ]; then
              echo "NVM ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang ti·∫øn h√†nh c√†i ƒë·∫∑t NVM..."
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            fi
            
            # T·∫£i NVM v√†o phi√™n SSH hi·ªán t·∫°i
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            # 2. C√†i ƒë·∫∑t ho·∫∑c s·ª≠ d·ª•ng phi√™n b·∫£n Node.js c·ª• th·ªÉ (v√≠ d·ª•: Node.js 22 LTS)
            # ƒê·∫£m b·∫£o phi√™n b·∫£n n√†y kh·ªõp v·ªõi phi√™n b·∫£n b·∫°n d√πng ƒë·ªÉ ph√°t tri·ªÉn bot
            echo "Ki·ªÉm tra v√† c√†i ƒë·∫∑t Node.js 22..."
            nvm install 22 || true # '|| true' ƒë·ªÉ tr√°nh l·ªói n·∫øu ƒë√£ c√≥ v√† NVM b√°o l·ªói nh·∫π
            nvm use 22 # S·ª≠ d·ª•ng phi√™n b·∫£n Node.js ƒë√£ c√†i ƒë·∫∑t
            nvm alias default 22 # ƒê·∫∑t l√†m m·∫∑c ƒë·ªãnh cho c√°c phi√™n SSH sau n√†y

            # 3. C√†i ƒë·∫∑t PM2 to√†n c·ª•c n·∫øu ch∆∞a c√≥
            if ! command -v pm2 &> /dev/null; then
                echo "PM2 ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang ti·∫øn h√†nh c√†i ƒë·∫∑t PM2..."
                npm install -g pm2
            fi

            # 4. C√†i ƒë·∫∑t c√°c g√≥i h·ªá th·ªëng c·∫ßn thi·∫øt (FFmpeg, Opus) n·∫øu ch∆∞a c√≥
            if ! command -v ffmpeg &> /dev/null; then
                echo "FFmpeg ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. ƒêang ti·∫øn h√†nh c√†i ƒë·∫∑t..."
                sudo apt update && sudo apt install -y ffmpeg libopus-dev
            fi

            # 5. Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c d·ª± √°n bot tr√™n server
            cd ${{ secrets.PROJECT_PATH }}

            # 6. Ki·ªÉm tra xem repository Git ƒë√£ ƒë∆∞·ª£c clone ch∆∞a (l·∫ßn tri·ªÉn khai ƒë·∫ßu ti√™n so v·ªõi c√°c l·∫ßn sau)
            if [ -d ".git" ]; then
              echo "Repository Git ƒë√£ t·ªìn t·∫°i, ƒëang k√©o c√°c thay ƒë·ªïi m·ªõi nh·∫•t..."
              git pull origin main # K√©o thay ƒë·ªïi n·∫øu kho m√£ ƒë√£ t·ªìn t·∫°i
            else
              echo "Kh√¥ng t√¨m th·∫•y Repository Git, ƒëang clone l·∫ßn ƒë·∫ßu..."
              # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng v√† t√™n repo t·ª´ bi·∫øn m√¥i tr∆∞·ªùng c·ªßa GitHub Actions
              git clone https://github.com/${{ github.repository }}.git . # Clone n·∫øu l√† l·∫ßn tri·ªÉn khai ƒë·∫ßu ti√™n
            fi

            # 7. C√†i ƒë·∫∑t l·∫°i c√°c g√≥i Node.js tr√™n server (quan tr·ªçng sau khi k√©o code m·ªõi)
            # D√πng --production ƒë·ªÉ ch·ªâ c√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt cho m√¥i tr∆∞·ªùng ch·∫°y bot
            echo "C√†i ƒë·∫∑t c√°c g√≥i Node.js tr√™n server..."
            npm install --production

            # 8. T·∫°o ho·∫∑c c·∫≠p nh·∫≠t file .env tr√™n server b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c GitHub Secrets
            echo "T·∫°o/c·∫≠p nh·∫≠t file .env..."
            # X√≥a n·ªôi dung c≈© ƒë·ªÉ tr√°nh tr√πng l·∫∑p
            > src/.env 
            echo "DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}" >> src/.env
            echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> src/.env # B·ªï sung TOKEN
            echo "GUILD_ID=${{ secrets.GUILD_ID }}" >> src/.env # B·ªï sung GUILD_ID

            # 9. Kh·ªüi ƒë·ªông l·∫°i bot b·∫±ng PM2
            # 'pm2 reload' s·∫Ω reload n·∫øu bot ƒëang ch·∫°y; '|| pm2 start' s·∫Ω ch·∫°y bot n·∫øu n√≥ ch∆∞a ch·∫°y
            echo "Kh·ªüi ƒë·ªông l·∫°i bot b·∫±ng PM2..."
            pm2 save # L∆∞u tr·∫°ng th√°i c√°c ti·∫øn tr√¨nh PM2
            pm2 reload racoon-discord || pm2 start index.js --name "racoon-discord"
            echo "Bot ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai v√† kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng!"
            
            # 10. T·∫°o v√† ch·∫°y script g·ª≠i th√¥ng b√°o Discord
            # ƒê·∫£m b·∫£o Node.js ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t trong phi√™n n√†y (nvm use 22)
            echo "T·∫°o v√† ch·∫°y script g·ª≠i th√¥ng b√°o Discord..."
            cat << 'EOF_NODE_SCRIPT' > send_deploy_notification.js
            const { Client, GatewayIntentBits } = require("discord.js");
            const dotenv = require("dotenv");
            // R·∫§T QUAN TR·ªåNG: Ch·ªâ ƒë·ªãnh ƒë∆∞·ªùng d·∫´n t·ªõi file .env n·∫øu n√≥ kh√¥ng ·ªü th∆∞ m·ª•c g·ªëc
            dotenv.config({ path: './src/.env' });

            const token = process.env.DISCORD_TOKEN;
            const channelId = process.env.DISCORD_CHANNEL_ID;
            const guildId = process.env.GUILD_ID;

            if (!token || !channelId || !guildId) {
                console.error("L·ªói: Thi·∫øu m·ªôt trong c√°c bi·∫øn DISCORD_TOKEN, DISCORD_CHANNEL_ID, ho·∫∑c GUILD_ID trong .env.");
                console.error(`Token: ${token ? 'C√≥' : 'Kh√¥ng'}`);
                console.error(`Channel ID: ${channelId ? 'C√≥' : 'Kh√¥ng'}`);
                console.error(`Guild ID: ${guildId ? 'C√≥' : 'Kh√¥ng'}`);
                process.exit(1);
            }

            const client = new Client({
                intents: [
                    GatewayIntentBits.Guilds,
                    GatewayIntentBits.GuildMessages,
                    GatewayIntentBits.MessageContent
                ]
            });

            client.once("ready", async () => {
                console.log(`ƒêƒÉng nh·∫≠p th√†nh c√¥ng v·ªõi vai tr√≤ ${client.user.tag}! Chu·∫©n b·ªã g·ª≠i th√¥ng b√°o...`);
                try {
                    const guild = client.guilds.cache.get(guildId);
                    if (!guild) {
                        console.error(`L·ªói: Kh√¥ng t√¨m th·∫•y Guild (m√°y ch·ªß Discord) v·ªõi ID: ${guildId}. ƒê·∫£m b·∫£o bot ƒë√£ ƒë∆∞·ª£c m·ªùi v√†o guild n√†y.`);
                        client.destroy();
                        process.exit(1);
                    }
                    const channel = guild.channels.cache.get(channelId);
                    if (channel && channel.isTextBased()) {
                        const commitSha = process.env.GITHUB_SHA ? process.env.GITHUB_SHA.substring(0, 7) : "N/A";
                        const commitUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}/commit/${process.env.GITHUB_SHA}`;
                        const repositoryUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}`;
                        const actor = "Ti·∫øn ƒê·∫∑ng"

                        await channel.send(
                            `üöÄ **Tri·ªÉn khai th√†nh c√¥ng!**\n` +
                            `**Bot:** \`${client.user.tag}\`\n` +
                            `**Phi√™n b·∫£n:** \`${process.env.GITHUB_REF_NAME || "main"}\`\n` +
                            `**Ng∆∞·ªùi tri·ªÉn khai:** \`${actor}\`\n` +
                            `**Repository:** <${repositoryUrl}>\n` +
                            `Bot ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v√† kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng tr√™n server.\n` +
                        );
                        console.log("ƒê√£ g·ª≠i tin nh·∫Øn th√¥ng b√°o tri·ªÉn khai th√†nh c√¥ng l√™n Discord.");
                    } else {
                        console.error(`L·ªói: Kh√¥ng t√¨m th·∫•y k√™nh vƒÉn b·∫£n v·ªõi ID: ${channelId}, ho·∫∑c k√™nh ƒë√≥ kh√¥ng ph·∫£i l√† k√™nh vƒÉn b·∫£n.`);
                    }
                } catch (error) {
                    console.error("L·ªói khi g·ª≠i tin nh·∫Øn Discord:", error.message || error);
                } finally {
                    client.destroy();
                    process.exit(0);
                }
            });

            client.on("error", (error) => {
                console.error("L·ªói client Discord:", error);
                process.exit(1);
            });

            client.login(token).catch(err => {
                console.error("L·ªói ƒëƒÉng nh·∫≠p Discord:", err.message || err);
                process.exit(1);
            });
            EOF_NODE_SCRIPT

            # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ bot c√≥ th·ªÉ kh·ªüi ƒë·ªông l·∫°i ho√†n ch·ªânh tr∆∞·ªõc khi g·ª≠i th√¥ng b√°o
            sleep 5 
            node ./send_deploy_notification.js || { echo "L·ªói: Kh√¥ng th·ªÉ ch·∫°y script g·ª≠i th√¥ng b√°o Discord."; exit 1; }

            # 11. X√≥a script t·∫°m th·ªùi
            rm send_deploy_notification.js || { echo "C·∫£nh b√°o: Kh√¥ng th·ªÉ x√≥a script g·ª≠i th√¥ng b√°o t·∫°m th·ªùi."; }